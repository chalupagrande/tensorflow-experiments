{"version":3,"sources":["snake/main.js"],"names":["canvasSize","boardDimension","fps","generationPopSize","generation","Generation","frameRate","parent","canvasParentRef","game","boardSize","console","score","forEach","noLoop","step","status","drawBoxes","snakePos","snake","ip5","applePos","noStroke","pos","positions","x","scl","fill","rect","y","setup"],"mappings":"AAAA,MAAMA,WAAa,IACbC,eAAiB,GAAjBA,IAAAA,GACN,IAAAC,IAAS,EAILC,kBAAoB,GAIpBC,WAAa,IAAIC,WAAWF,kBATT,IAsBrBD,SAAOI,MAAAA,GACPF,aAxBiB,IAAA,KAwBiBG,OAAAC,GAChCJ,WAAU,IAAGK,WAAb,EAAAC,WAEEC,SAAAA,OAJJT,KAAOI,UAAUJ,KAMbO,WAAKG,MAAQC,QAAbJ,IACAK,IAAAA,EAAML,EAAAM,QACGC,IALXA,GAMEP,QAAKG,IAAL,QAHAH,EAAKG,MAAQ,EAKfK,UAVF,IAAAD,IAcFP,EAAAG,OAAA,GAJIK,UAAUR,KASZ,SAAIS,UAAWT,EAAKU,GACpBC,EAAIC,WAAWZ,KAEfW,EAAIE,KAAAA,KACJJ,EAAAA,KAASL,UAASU,EAADX,MAAY,EAAA,IAC3BQ,IAAAA,EAAAX,EAAAU,MAAAK,UACAJ,EAAaK,EAAIC,aAGnBN,EAAIO,WACJP,EAASC,QAAQ,CAACI,EAAIC,KAIxBN,EAAAO,KAAA,GACAP,EAAAQ,KAzDM3B,GAyDNsB,EAAAE,EAzDMxB,GAyDNsB,EAAAM,EAzDM5B,GAAAA,MA4DNmB,EAAAO,KAAA,IAAA,EAAA,GACAP,EAAAQ,KA7DM3B,GA6DNoB,EAAAI,EA7DMxB,GA6DNoB,EAAAQ,EA7DM5B,GAAAA,IAgBNG,WAAS0B","file":"../../snake/main.min.js","sourcesContent":["const canvasSize = 200 // number of pixels of each game board\nconst boardDimension = 10 // number or \"squares\" in each game board\nconst scl = canvasSize / boardDimension\n\nlet fps = 5\n\nlet generationPopSize = 12\n\n\n// create games and generations\nlet generation = new Generation(generationPopSize, boardDimension)\ngeneration.init()\n\n\n\n\n\nfunction setup(canvasParentRef) {\n  createCanvas(canvasSize, canvasSize).parent(canvasParentRef)\n  generation = new Generation(2, boardSize)\n}\n\nfunction draw() {\n  fps && frameRate(fps)\n  generation.games.forEach((game => {\n    let status = game.step()\n    if (status === -1) {\n      console.log('LOST')\n      // game = new Game(boardSize, boardSize)\n      game.score = 1\n      noLoop()\n    } else if (status === 1) {\n      game.score += 1\n    }\n    drawBoxes(game)\n  }))\n}\n\n// does the drawing\nfunction drawBoxes(ip5, game) {\n  ip5.background(100)\n  ip5.fill(255)\n  ip5.text(`Score: ${game.score}`, 1, 10)\n  let snakePos = game.snake.positions\n  let applePos = game.baitLocation\n\n  ip5.noStroke()\n  snakePos.forEach((pos, i) => {\n    ip5.fill(0)\n    ip5.rect(pos.x * scl, pos.y * scl, scl, scl)\n  })\n\n  ip5.fill(255, 0, 0)\n  ip5.rect(applePos.x * scl, applePos.y * scl, scl, scl)\n\n}\n\n// sketch.keyPressed = (e) => {\n//   e.preventDefault()\n//   if (sketch.keyCode === sketch.LEFT_ARROW) {\n//     game.snake.setHeading(-1, 0)\n//   } else if (sketch.keyCode === sketch.RIGHT_ARROW) {\n//     game.snake.setHeading(1, 0)\n//   } else if (sketch.keyCode === sketch.UP_ARROW) {\n//     game.snake.setHeading(0, -1)\n//   } else if (sketch.keyCode === sketch.DOWN_ARROW) {\n//     game.snake.setHeading(0, 1)\n//   }\n// }"]}