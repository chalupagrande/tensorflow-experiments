{"version":3,"sources":["snake/main.js"],"names":["canvasSize","boardDimensions","fps","generationPopSize","instances","numGenerations","i","createSketch","game","p5","sketch","setup","Game","createCanvas","keyPressed","e","preventDefault","keyCode","LEFT_ARROW","snake","setHeading","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","addSnake","Snake","draw","frameRate","status","console","log","noLoop","score","drawBoxes","ip5","background","fill","text","snakePos","noStroke","forEach","pos","rect","x","y","applePos"],"mappings":"AAAA,MAAMA,WAAa,IACbC,gBAAkB,GAAlBA,IAAAA,GACN,IAAAC,IAAS,EAILC,kBAAoB,GACpBC,UAAY,GACZC,eAAiB,EAMpB,IAAA,IAAAC,EAAA,EAAAA,EAAAH,kBAAAG,IADCF,UAAUE,GAAKC,eAKb,SAAIC,eADN,OAAO,IAAIC,GAAIC,IAGbA,IAAAA,EAEEF,EAAIG,MAAOC,KADXF,EAAOG,aArBM,IAAA,KAuBbH,EAAOI,IAAAA,KAAAA,EAtBW,GAAA,IAuBhBC,EAAEC,WAAFD,IAAAA,EAAEC,iBACEN,EAAOO,UAAYP,EAAOQ,WAC5BV,EAAKW,MAAMC,YAAY,EAAG,GACjBV,EAAOO,UAAYP,EAAOW,YACnCb,EAAKW,MAAMC,WAAW,EAAG,GAChBV,EAAOO,UAAYP,EAAOY,SACnCd,EAAKW,MAAMC,WAAW,GAAI,GACjBV,EAAOO,UAAYP,EAAOa,YACnCf,EAAKW,MAAMC,WAAW,EAAG,IAG7BZ,EAAKgB,SAAS,IAAIC,MAAMf,KAG1BA,EAAOgB,KAAO,KAAdhB,EAAOgB,UAAOxB,KACZQ,IAAAA,EAAOiB,EAAUzB,QACJM,IAAToB,GAEFC,QAAQC,IAAI,QADdpB,EAAIkB,SACFC,EAAAA,MAAY,GACZ,IAAOE,IACPvB,EAAKwB,OAAL,GAEAxB,UAAKwB,EAALxB,MA6BR,SAASyB,UAAUC,EAAK1B,GAAxB0B,EAAAC,WAASF,KACPC,EAAIC,KAAAA,KACJD,EAAIE,KAAK,UAAT5B,EAAAwB,MAAA,EAAA,IACAE,IAAIG,EAAM7B,EAASA,MAAKwB,UACpBM,EAAW9B,EAAKW,aAGpBe,EAAIK,WACJD,EAASE,QAAQ,CAACC,EAAKnC,KACrB4B,EAAIE,KAAK,GACTF,EAAIQ,KApFFzC,GAoFOwC,EAAIE,EApFX1C,GAoFoBwC,EAAIG,EApFxB3C,GAAAA,MAwFJiC,EAAIQ,KAAKG,IAAAA,EAAQ,GAElBX,EAAAQ,KA1FKzC,GA0FL4C,EAAAF,EA1FK1C,GA0FL4C,EAAAD,EA1FK3C,GAAAA","file":"../../snake/main.min.js","sourcesContent":["const canvasSize = 200 // number of pixels of each game board\nconst boardDimensions = 10 // number or \"squares\" in each game board\nconst scl = canvasSize / boardDimensions\n\nlet fps = 5\n\nlet generationPopSize = 12\nlet instances = {}\nlet numGenerations = 2\n\n\n// create games and generations\nfor(let i = 0; i < generationPopSize; i++){\n  instances[i] = createSketch()\n}\n\nfunction createSketch(){\n  return new p5((sketch) => {\n    let game\n\n    sketch.setup = ()=> {\n      sketch.createCanvas(canvasSize, canvasSize)\n      game = new Game(sketch, boardDimensions, boardDimensions)\n      sketch.keyPressed = (e) => {\n        e.preventDefault()\n        if (sketch.keyCode === sketch.LEFT_ARROW) {\n          game.snake.setHeading(-1, 0)\n        } else if (sketch.keyCode === sketch.RIGHT_ARROW) {\n          game.snake.setHeading(1, 0)\n        } else if (sketch.keyCode === sketch.UP_ARROW) {\n          game.snake.setHeading(0, -1)\n        } else if (sketch.keyCode === sketch.DOWN_ARROW) {\n          game.snake.setHeading(0, 1)\n        }\n      }\n      game.addSnake(new Snake(sketch))\n    }\n\n    sketch.draw = () => {\n      sketch.frameRate(fps)\n      let status = game.step()\n      if (status === -1) {\n        console.log('LOST')\n        sketch.noLoop()\n        game.score = 1\n      } else if (status === 1) {\n        game.score += 1\n      }\n      drawBoxes(sketch, game)\n    }\n  })\n}\n\n// function setup(canvasParentRef) {\n//   createCanvas(canvasSize, canvasSize).parent(canvasParentRef)\n//   generation = new Generation(2, boardSize)\n// }\n\n// function draw() {\n//   fps && frameRate(fps)\n//   generation.games.forEach((game => {\n//     let status = game.step()\n//     if (status === -1) {\n//       console.log('LOST')\n//       // game = new Game(boardSize, boardSize)\n//       game.score = 1\n//       noLoop()\n//     } else if (status === 1) {\n//       game.score += 1\n//     }\n//     drawBoxes(game)\n//   }))\n// }\n\n// does the drawing\nfunction drawBoxes(ip5, game) {\n  ip5.background(100)\n  ip5.fill(255)\n  ip5.text(`Score: ${game.score}`, 1, 10)\n  let snakePos = game.snake.positions\n  let applePos = game.baitLocation\n\n  ip5.noStroke()\n  snakePos.forEach((pos, i) => {\n    ip5.fill(0)\n    ip5.rect(pos.x * scl, pos.y * scl, scl, scl)\n  })\n\n  ip5.fill(255, 0, 0)\n  ip5.rect(applePos.x * scl, applePos.y * scl, scl, scl)\n\n}"]}