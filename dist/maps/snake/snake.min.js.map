{"version":3,"sources":["snake/snake.js"],"names":["Snake","constructor","ip5","this","initialPos","createVector","headPos","positions","length","shouldGrow","setHeading","newHeading","combined","heading","y","add","x","move","newPositions","map","p","copy","i","curPos","push","oldPositions","grow"],"mappings":"AAAA,MAAMA,MACJC,YAAYC,GACVC,KAAKD,IAAMA,EACX,IAAIE,EAAaF,EAAIG,aAAa,EAAG,GACrCF,KAAKG,QAAUF,EACfD,KAAKI,UAAY,CAACH,GAGlBD,KAAKK,QAASN,EAAKK,aAAUC,EAA7B,GACAL,KAAKM,OAAAA,KAAaF,UAAlBC,OACDL,KAAAM,YAAA,EAGCC,WAAIC,EAAAA,GACJ,IAAIC,EAAWT,KAAKU,IAAAA,aAAYF,EAAjBG,GAAXF,EAAWT,KAAKU,QAAQE,IAAIJ,GAGhC,GAAeA,IAAfC,EAAAI,GAAA,IAAeL,EAAfG,EAED,OADCX,KAAAU,QAAYA,EACbV,KAAAU,QAGCI,OACA,IAAIC,EAAef,KAAnBI,UAAAY,IAAAC,GAAAA,EAAAC,QAAIH,EAAe,GACnB,IAAK,IAAII,EAAI,EAAGA,EAAInB,KAAKI,UAAUC,OAAQc,IAAK,CAC9C,IAAIC,EAASpB,KAAKI,UAAUe,GAAGD,OAC/B,GAAU,IAANC,GACFJ,GADFA,EAAaM,KAAAD,EAAAR,IAAAZ,KAAAU,UACXK,KAAAA,WAAkBK,CAEhBL,EAAaM,QAAQrB,KAAKI,WAD5B,YAGCW,EAAAM,KAAArB,KAAAI,UAAAe,EAAA,IAKL,OAFGnB,KAAAM,YAAA,EACFN,KAAAG,QAAAY,EAAA,GAGDf,KAAKI,UAAYW,EAFZT,CACLS,aAAAA,EACAO,aAAAA,GACOC,OAIRvB,KAAAM,YAAA","file":"../../snake/snake.min.js","sourcesContent":["class Snake {\n  constructor(ip5) {\n    this.ip5 = ip5\n    let initialPos = ip5.createVector(0, 0)\n    this.headPos = initialPos\n    this.positions = [initialPos]\n\n    this.heading = ip5.createVector(1, 0)\n    this.length = this.positions.length\n    this.shouldGrow = false\n  }\n\n  setHeading(x, y) {\n    let newHeading = this.ip5.createVector(x, y)\n    let combined = this.heading.add(newHeading)\n    // cant go backwards\n    if (combined.x === 0 && combined.y === 0) return\n    this.heading = newHeading\n    return this.heading\n  }\n\n  move() {\n    let oldPositions = this.positions.map((p) => p.copy())\n    let newPositions = []\n    for (let i = 0; i < this.positions.length; i++) {\n      let curPos = this.positions[i].copy()\n      if (i === 0) {\n        newPositions.push(curPos.add(this.heading))\n        if (this.shouldGrow) {\n          newPositions.push(...this.positions)\n          break\n        }\n      } else {\n        newPositions.push(this.positions[i - 1])\n      }\n    }\n    this.shouldGrow = false\n    this.headPos = newPositions[0]\n    this.positions = newPositions\n    return {\n      newPositions,\n      oldPositions,\n    }\n  }\n\n  grow() {\n    this.shouldGrow = true\n  }\n}\n"]}