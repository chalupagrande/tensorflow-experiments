{"version":3,"sources":["snake2/generation.js"],"names":["Generation","constructor","ctx","this","population","createPopulation","playState","Array","populationSize","map","e","GameInstance","play","forEach","setPlayState","pause","playerMode","setPlayerMode"],"mappings":"AAAA,MAAMA,WAaJC,YAAYC,GACVC,KAAKC,WAAaD,KAAKE,mBACvBF,KAAKG,UAAY,OAGnBD,mBACE,MAAO,IAAIE,MAAMC,iBAAiBC,IAAIC,GAGvC,IAAAC,aAAAT,MAICU,OACDT,KAAAG,UAAA,OADCH,KAAKC,WAAWS,QAAQH,GAAKA,EAAEI,aAAaX,KAAKG,YAKjDS,QACDZ,KAAAG,UAAA,QADCH,KAAKC,WAAWS,QAAQH,GAAKA,EAAEI,aAAaX,KAAKG,YAKlDU,aADCb,KAAKC,WAAWS,QAAQH,GAAKA,EAAEO","file":"../../snake2/generation.min.js","sourcesContent":["class Generation {\n  /**\n   * @param {p5 instance} p - Instance of p5.js\n   * @param {int} popSize - number of individual snakes in the population\n   * @param {object} ctx - {\n   *                          name: name of game instance\n   *                          w: width in pixels of canvas\n   *                          h: height in pixels of canvas\n   *                          rows: height in tiles for the gameboard\n   *                          cols: width in tiles for the gameboard\n   *                          fps: frames per sec of game\n   *                         }\n   */\n  constructor(ctx){\n    this.population = this.createPopulation()\n    this.playState = 'play'\n  }\n\n  createPopulation(){\n    return [...Array(populationSize)].map(e => (\n      new GameInstance(ctx)\n    ))\n  }\n\n  play(){\n    this.playState = 'play'\n    this.population.forEach(e => e.setPlayState(this.playState))\n  }\n\n  pause(){\n    this.playState = 'pause'\n    this.population.forEach(e => e.setPlayState(this.playState))\n  }\n\n  playerMode(){\n    this.population.forEach(e => e.setPlayerMode())\n  }\n}"]}