class Brain{constructor(t){this.ctx=t,this.model=this.createModel()}createModel(){let{sightSize:t,nnHiddenLayers:e,nnHiddenNodes:n,nnActivationFunc:s,nnLearningRate:i,nnOptimizer:a,nnLoss:r}=this.ctx;tf.setBackend("cpu");let c=[];for(let i=0;i<e;i++){let e=0===i?tf.layers.dense({inputShape:[t*t],units:n,activation:s}):tf.layers.dense({units:n,activation:"softmax"});c.push(e)}c.push(tf.layers.dense({units:4}));const o=tf.train[a](i),l=tf.sequential({layers:c});return l.compile({optimizer:o,loss:tf.losses[r],metrics:["accuracy"]}),l}predict(t){return this.model.predict(tf.tensor([t.flat()])).dataSync()}}
//# sourceMappingURL=../maps/snake2/brain.min.js.map
