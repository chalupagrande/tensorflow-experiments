class Snake{constructor(s){let{p:t,rows:i,cols:e}=s;this.ctx=s;let h=t.createVector(Math.floor((e-1)/2),Math.floor((i-1)/2));this.headPos=h,this.positions=[h],this.life=s.snakeLife,this.brain=null,this.heading=t.createVector(1,0),this.length=this.positions.length,this.shouldGrow=!1,this.scan={}}addBrain(s){this.brain=s}think(){switch(this.brain.predict(this.scan.scanValues).reduce((s,t,i)=>(s.val,{val:-1/0,i:0})).i){case 0:this.setHeading(0,-1);break;case 1:this.setHeading(1,0);break;case 2:this.setHeading(0,1);break;case 3:this.setHeading(-1,0);break;default:this.setHeading(1,0)}}setHeading(s,t){let{p:i}=this.ctx,e=i.createVector(s,t),h=this.heading.add(e);if(0!==h.x||0!==h.y)return this.heading=e,this.heading}move(){let s=this.positions.map(s=>s.copy()),t=[];for(let s=0;s<this.positions.length;s++){let i=this.positions[s].copy();if(0===s){if(t.push(i.add(this.heading)),this.shouldGrow){t.push(...this.positions);break}}else t.push(this.positions[s-1])}return this.shouldGrow=!1,this.headPos=t[0],this.positions=t,this.life-=1,{newPositions:t,oldPositions:s}}grow(){this.shouldGrow=!0,this.life+=100}look(s){let{sightSize:t,p:i}=this.ctx,e={},h=[],o=-1*Math.floor(t/2),a=Math.floor(t/2);for(let t=o;t<=a;t++){let n=[];for(let h=o;h<=a;h++){let o,a=i.createVector(t,h),r=p5.Vector.add(a,this.headPos);try{o=s[r.x][r.y]}catch{o=-1}void 0===o&&(o=-1),e[`${t},${h} -- ${r.x},${r.y}`]=o,e._headPos=this.headPos,n.push(o)}h.push(n)}return this.scan={scanValues:h,scanObj:e},this.scan}}
//# sourceMappingURL=../maps/snake2/snake.min.js.map
