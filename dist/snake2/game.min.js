class Game{constructor(t){this.ctx=t,this.board=[],this.baitLocation=null;let{rows:e,cols:s}=this.ctx;for(let t=0;t<e;t++){let t=[...Array(s)].map(()=>0);this.board.push(t)}this.snake=null,this.score=1,this.gameOver=!1}set(t,e){this.board[t.x][t.y]=e}get(t){return this.board[t.x][t.y]}addSnake(t){this.snake=t,this.snake.positions.forEach(t=>this.set(t,-1))}newBait(){let t,{p:e,rows:s,cols:o}=this.ctx,i=-1;for(;-1===i||1===i;){let r=Math.floor(e.random(o)),h=Math.floor(e.random(s));t=e.createVector(r,h),i=this.get(t)}this.baitLocation=t,this.set(t,1)}step(){this.snake.look(this.board),this.snake.think();let{oldPositions:t,newPositions:e}=this.snake.move(),s=this.updateBoard(t,e,this.baitLocation);return 1===s?(this.snake.grow(),this.newBait(),this.score+=1):-1===s&&(this.gameOver=!0),s}updateBoard(t,e,s){try{t.forEach(t=>this.set(t,0)),e.forEach(t=>this.set(t,-1))}catch{return-1}let o=[...e];for(let t=0;t<o.length;t++){let e=o[t];o.splice(t,1);let i=o;for(let t=0;t<i.length;t++){let s=i[t];if(e.equals(s))return-1}return e.x>=this.ctx.cols||e.x<0||e.y>=this.ctx.rows||e.y<0?-1:e.equals(s)?1:0}}render(){let{scl:t,p:e,elements:s,sightSize:o}=this.ctx;if(s.score.html("Score: "+this.score),s.life.html("Life: "+this.snake.life),this.gameOver)return void e.noLoop();e.background(100);let i=this.snake.positions,r=this.baitLocation;e.push();let h=-1*Math.floor(o/2),a=Math.floor(o/2);e.noStroke(),e.fill(120);for(let s=h;s<=a;s++)for(let o=h;o<=a;o++){let i=e.createVector(s,o),r=p5.Vector.add(i,this.snake.headPos);e.rect(r.x*t,r.y*t,t,t)}e.pop(),e.push(),e.noStroke(),i.forEach((s,o)=>{0===o?e.fill(0):e.fill(40),e.rect(s.x*t,s.y*t,t,t)}),e.pop(),e.push(),e.noStroke(),e.fill(255,0,0),e.rect(r.x*t,r.y*t,t,t),e.pop()}}
//# sourceMappingURL=../maps/snake2/game.min.js.map
