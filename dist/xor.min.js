let model,inputs,inputsArrayRaw=[],trainingInputs=tf.tensor([[1,0],[0,1],[0,0],[1,1]]),answers=tf.tensor([[1],[1],[0],[0]]),size=400,resolution=8,scl=size/resolution,doneTraining=!0,settings={},lossEl=null,cyclesEl=null;function getModel(){const e=tf.sequential({layers:[tf.layers.dense({inputShape:[2],units:4,activation:settings.activation}),tf.layers.dense({units:1})]}),t=settings.learningRate,i=tf.train[settings.optimizer](t);return e.compile({optimizer:i,loss:tf.losses[settings.loss],metrics:["accuracy"]}),e}function setup(){addSettingInputs(),createElement("h1","Grid Visualization"),createCanvas(size,size),initialDraw(),setupModel()}function draw(){frameRate(8),doneTraining&&(doneTraining=!1,model.fit(trainingInputs,answers,{shuffle:!0}).then(({history:e})=>{let t=e.loss[0];if(updateStats(t),1*t.toFixed(2)==0)return void console.log("DONE");doneTraining=!0;let i=model.predict(inputs).dataSync(),n=0;for(let e=0;e<resolution;e++)for(let t=0;t<resolution;t++)drawBoxes(e,t,map(i[n],0,1,0,255)),n++}))}function updateStats(e){lossEl.html("Loss: "+e),cyclesEl.html("Cycles: "+frameCount)}function setupModel(){doneTraining=!0,model&&model.dispose(),model=tf.tidy(()=>getModel()),inputs=tf.tensor(inputsArrayRaw),inputs.print()}function initialDraw(){for(let e=0;e<resolution;e++)for(let t=0;t<resolution;t++){let{xVal:i,yVal:n}=drawBoxes(e,t,100);inputsArrayRaw.push([i,n])}}function drawBoxes(e,t,i){let n=map(e,0,resolution-1,0,1),s=map(t,0,resolution-1,0,1);return push(),translate(e*scl,t*scl),fill(i),stroke(255),rect(0,0,scl,scl),fill(i>127.5?0:255),strokeWeight(0),textAlign(CENTER),textSize(8),text(`[${10*n.toFixed(1)}, ${10*s.toFixed(1)}]`,scl/2,scl/2),pop(),{xVal:n,yVal:s}}function addSettingInputs(){let e=createDiv("<h1>Settings</h1>");e.id="settings";let t=createButton("reset");t.mousePressed(setupModel),e.child(t),e.child(createElement("br")),settings.activation="relu";let i=createSelect();i.option("relu"),i.option("sigmoid"),i.option("tanh"),i.option("linear"),i.option("swish"),i.option("selu"),i.changed(e=>{settings.activation=e.target.value}),e.child(createElement("label","Activation Function")),e.child(i),e.child(createElement("br")),settings.optimizer="sgd";let n=createSelect();n.option("sgd"),n.option("momentum"),n.option("adagrad"),n.option("adadelta"),n.option("adam"),n.option("adamax"),n.option("rmsprop"),n.changed(e=>{settings.optimizer=e.target.value}),e.child(createElement("label","Optimizer Function")),e.child(n),e.child(createElement("br")),settings.loss="meanSquaredError";let s=createSelect();s.option("absoluteDifference"),s.option("computeWeightedLoss"),s.option("cosineDistance"),s.option("hingeLoss"),s.option("huberLoss"),s.option("logLoss"),s.option("meanSquaredError"),s.option("sigmoidCrossEntropy"),s.option("softmaxCrossEntropy"),s.changed(e=>{settings.loss=e.target.value}),e.child(createElement("label","Loss Function")),e.child(s),e.child(createElement("br")),settings.learningRate=.2;let o=createSpan(settings.learningRate),l=createSlider(0,1,.2,.1);l.changed(e=>{settings.learningRate=e.target.value,o.html(e.target.value)}),e.child(createElement("label","Learning Rate")),e.child(l),e.child(o),e.child(createElement("br")),lossEl=createP("Loss: 1000"),e.child(lossEl),cyclesEl=createP("Cycles: 0"),e.child(cyclesEl)}
//# sourceMappingURL=maps/xor.min.js.map
